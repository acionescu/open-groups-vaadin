The point is to offer a user or a group of users private access to some entities, without breaking the logical flow
of problems/solutions hierarchy.

The access rules will define the access to a certain entity of different types of users.

There will be three types of users:
-the creator which will have total access to the entity
-the member of a group with which the entity is shared
-the others

Each access rule will define permission for group members and the others

Permissions will define to what type of actions a users will have access to

Create table access_permissions
-id
-name

Create table action_types_permissions
-permission_id
-action_type_id

Create table access_rules

-id
-name
-access_level
-active

Create table access_rules_strategies
-access_rule_id
-user_type_id
-permission_id


The column "access_rule_id" will be created in the "entities" table to hold a reference to the access rule set for
that entity
null - will be considered public

Add column "group_id" to the entities table in order to store the group with which the entity is shared

Modify the add/update entity flows to allow the setting of privacy rule for an entity

The update flow needs to check if the access rule to be set is allowed depending if it has offsprings 
created by other users or not, and the rule of the parent
If it has offsprings create by others, the change of the access rule will not be allowed
If it has only offsprings created by the owner of the entity, the access rule of those that are more permissive 
will also be changed to the access rule of the entity being updated


Modify the "open entity" flow to check if the user has access to the requested entity ( should be done in the middleware )
and also to bring the access_rule_id and the group_id values

Modify the  "list subentities" flow in order to filter out the entities to which the user does not have access

Modify the list hierarchy tree to filter out the entities for which the user does not have read access

Filter the possible actions ( from action_strategies ) by the access rules of each specific entity

Checking user access
--------------------

Input: userId, flowId, entityId

get action_type_id from flowId
from (userId,entityId) get user_type_ids
get access_rule_id for entityId

Check if the access_rule allows for the user_type_ids, the action_type

 
Interface changes
---------------------

In the create/update form for an entity, a new combobox will be displayed that will allow the selection
of the access rule for the targeted entity.

The possible selection values will be the access rules defined in the access_rules table that are MORE restrictive
then the parent access_rule
+ the same rule as the parent ( default ).

For the option "same as parent" the actual description of the parent access rule should be displayed








